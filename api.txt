namespace aa
kctl:  Root {
  templatedEndpoints: null,
  parameters: [],
  templated: false,
  splits: [ 'apis' ],
  backend: Request {
    requestOptions: {
      qsStringifyOptions: [Object],
      baseUrl: 'https://master.gotham-e2db.open.redhat.com:443',
      ca: undefined,
      cert: undefined,
      key: undefined,
      strictSSL: true,
      auth: [Object]
    },
    authProvider: { type: null }
  },
  getNames: [Function],
  children: [
    'build.openshift.io',
    'enmasse.io',
    'apps.openshift.io',
    'apps',
    'app',
    'authorization.openshift.io',
    'autoscaling',
    'batch',
    'events.k8s.io',
    'extensions',
    'extension',
    'image.openshift.io',
    'network.openshift.io',
    'networking.k8s.io',
    'policy',
    'rbac.authorization.k8s.io',
    'route.openshift.io',
    'template.openshift.io',
    'admin.enmasse.io',
    'quota.openshift.io',
    'user.enmasse.io',
    'admissionregistration.k8s.io',
    'apiregistration.k8s.io',
    'authorization.k8s.io',
    'certificates.k8s.io',
    'oauth.openshift.io',
    'project.openshift.io',
    'scheduling.k8s.io',
    'security.openshift.io',
    'storage.k8s.io',
    'user.openshift.io',
    'authentication.k8s.io',
    'mdc.aerogear.org',
    'push.aerogear.org',
    'mobile-security-service.aerogear.org'
  ],
  'build.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'build.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      buildconfigs: [Root],
      buildconfig: [Root],
      builds: [Root],
      build: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/build.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/build.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'enmasse.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'enmasse.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root]
    }
  },
  'apps.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'apps.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      deploymentconfigs: [Root],
      deploymentconfig: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apps.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/apps.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  apps: Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'apps' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1', 'v1beta2' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      controllerrevisions: [Root],
      controllerrevision: [Root],
      daemonsets: [Root],
      ds: [Root],
      daemonset: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      replicasets: [Root],
      rs: [Root],
      replicaset: [Root],
      statefulsets: [Root],
      statefulset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apps/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      controllerrevisions: [Root],
      controllerrevision: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      statefulsets: [Root],
      statefulset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apps/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta2: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      controllerrevisions: [Root],
      controllerrevision: [Root],
      daemonsets: [Root],
      ds: [Root],
      daemonset: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      replicasets: [Root],
      rs: [Root],
      replicaset: [Root],
      statefulsets: [Root],
      statefulset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apps/v1beta2/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/apps/',
    get: [Function: _get],
    getStream: [Function]
  },
  app: Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'apps' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1', 'v1beta2' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      controllerrevisions: [Root],
      controllerrevision: [Root],
      daemonsets: [Root],
      ds: [Root],
      daemonset: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      replicasets: [Root],
      rs: [Root],
      replicaset: [Root],
      statefulsets: [Root],
      statefulset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apps/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      controllerrevisions: [Root],
      controllerrevision: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      statefulsets: [Root],
      statefulset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apps/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta2: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      controllerrevisions: [Root],
      controllerrevision: [Root],
      daemonsets: [Root],
      ds: [Root],
      daemonset: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      replicasets: [Root],
      rs: [Root],
      replicaset: [Root],
      statefulsets: [Root],
      statefulset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apps/v1beta2/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/apps/',
    get: [Function: _get],
    getStream: [Function]
  },
  'authorization.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'authorization.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      clusterrolebindings: [Root],
      clusterrolebinding: [Root],
      clusterroles: [Root],
      clusterrole: [Root],
      resourceaccessreviews: [Root],
      resourceaccessreview: [Root],
      rolebindingrestrictions: [Root],
      rolebindingrestriction: [Root],
      rolebindings: [Root],
      rolebinding: [Root],
      roles: [Root],
      role: [Root],
      subjectaccessreviews: [Root],
      subjectaccessreview: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/authorization.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/authorization.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  autoscaling: Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'autoscaling' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v2beta1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      horizontalpodautoscalers: [Root],
      hpa: [Root],
      horizontalpodautoscaler: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/autoscaling/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v2beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      horizontalpodautoscalers: [Root],
      hpa: [Root],
      horizontalpodautoscaler: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/autoscaling/v2beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/autoscaling/',
    get: [Function: _get],
    getStream: [Function]
  },
  batch: Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'batch' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      jobs: [Root],
      job: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/batch/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      cronjobs: [Root],
      cronjob: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/batch/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/batch/',
    get: [Function: _get],
    getStream: [Function]
  },
  'events.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'events.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      events: [Root],
      ev: [Root],
      event: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/events.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/events.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  extensions: Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'extensions' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      podsecuritypolicies: [Root],
      podsecuritypolicie: [Root],
      daemonsets: [Root],
      ds: [Root],
      daemonset: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      ingresses: [Root],
      ing: [Root],
      ingress: [Root],
      networkpolicies: [Root],
      networkpolicie: [Root],
      replicasets: [Root],
      rs: [Root],
      replicaset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/extensions/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/extensions/',
    get: [Function: _get],
    getStream: [Function]
  },
  extension: Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'extensions' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      podsecuritypolicies: [Root],
      podsecuritypolicie: [Root],
      daemonsets: [Root],
      ds: [Root],
      daemonset: [Root],
      deployments: [Root],
      deploy: [Root],
      deployment: [Root],
      ingresses: [Root],
      ing: [Root],
      ingress: [Root],
      networkpolicies: [Root],
      networkpolicie: [Root],
      replicasets: [Root],
      rs: [Root],
      replicaset: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/extensions/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/extensions/',
    get: [Function: _get],
    getStream: [Function]
  },
  'image.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'image.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      images: [Root],
      image: [Root],
      imagesignatures: [Root],
      imagesignature: [Root],
      imagestreams: [Root],
      imagestream: [Root],
      imagestreamtags: [Root],
      imagestreamtag: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/image.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/image.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'network.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'network.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      clusternetworks: [Root],
      clusternetwork: [Root],
      hostsubnets: [Root],
      hostsubnet: [Root],
      netnamespaces: [Root],
      netnamespace: [Root],
      egressnetworkpolicies: [Root],
      egressnetworkpolicie: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/network.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/network.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'networking.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'networking.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      networkpolicies: [Root],
      networkpolicie: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/networking.k8s.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/networking.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  policy: Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'policy' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      podsecuritypolicies: [Root],
      podsecuritypolicie: [Root],
      poddisruptionbudgets: [Root],
      poddisruptionbudget: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/policy/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/policy/',
    get: [Function: _get],
    getStream: [Function]
  },
  'rbac.authorization.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'rbac.authorization.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      clusterrolebindings: [Root],
      clusterrolebinding: [Root],
      clusterroles: [Root],
      clusterrole: [Root],
      rolebindings: [Root],
      rolebinding: [Root],
      roles: [Root],
      role: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/rbac.authorization.k8s.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      clusterrolebindings: [Root],
      clusterrolebinding: [Root],
      clusterroles: [Root],
      clusterrole: [Root],
      rolebindings: [Root],
      rolebinding: [Root],
      roles: [Root],
      role: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/rbac.authorization.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/rbac.authorization.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'route.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'route.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      routes: [Root],
      route: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/route.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/route.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'template.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'template.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      brokertemplateinstances: [Root],
      brokertemplateinstance: [Root],
      templateinstances: [Root],
      templateinstance: [Root],
      templates: [Root],
      template: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/template.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/template.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'admin.enmasse.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'admin.enmasse.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta2' ],
    v1beta2: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root]
    }
  },
  'quota.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'quota.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      clusterresourcequotas: [Root],
      clusterresourcequota: [Root],
      watch: [Root],
      appliedclusterresourcequotas: [Root],
      appliedclusterresourcequota: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/quota.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/quota.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'user.enmasse.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'user.enmasse.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root]
    }
  },
  'admissionregistration.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'admissionregistration.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      mutatingwebhookconfigurations: [Root],
      mutatingwebhookconfiguration: [Root],
      validatingwebhookconfigurations: [Root],
      validatingwebhookconfiguration: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/admissionregistration.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/admissionregistration.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'apiregistration.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'apiregistration.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      apiservices: [Root],
      apiservice: [Root],
      watch: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apiregistration.k8s.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      apiservices: [Root],
      apiservice: [Root],
      watch: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/apiregistration.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/apiregistration.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'authorization.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'authorization.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      selfsubjectaccessreviews: [Root],
      selfsubjectaccessreview: [Root],
      selfsubjectrulesreviews: [Root],
      selfsubjectrulesreview: [Root],
      subjectaccessreviews: [Root],
      subjectaccessreview: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/authorization.k8s.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      selfsubjectaccessreviews: [Root],
      selfsubjectaccessreview: [Root],
      selfsubjectrulesreviews: [Root],
      selfsubjectrulesreview: [Root],
      subjectaccessreviews: [Root],
      subjectaccessreview: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/authorization.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/authorization.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'certificates.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'certificates.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      certificatesigningrequests: [Root],
      certificatesigningrequest: [Root],
      watch: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/certificates.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/certificates.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'oauth.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'oauth.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      oauthaccesstokens: [Root],
      oauthaccesstoken: [Root],
      oauthauthorizetokens: [Root],
      oauthauthorizetoken: [Root],
      oauthclientauthorizations: [Root],
      oauthclientauthorization: [Root],
      oauthclients: [Root],
      oauthclient: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/oauth.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/oauth.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'project.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'project.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      projects: [Root],
      project: [Root],
      projectrequests: [Root],
      projectrequest: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/project.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/project.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'scheduling.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'scheduling.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1beta1' ],
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      priorityclasses: [Root],
      priorityclasse: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/scheduling.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/scheduling.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'security.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'security.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      watch: [Root],
      rangeallocations: [Root],
      rangeallocation: [Root],
      securitycontextconstraints: [Root],
      securitycontextconstraint: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/security.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/security.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'storage.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'storage.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      storageclasses: [Root],
      storageclasse: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/storage.k8s.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      storageclasses: [Root],
      storageclasse: [Root],
      volumeattachments: [Root],
      volumeattachment: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/storage.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/storage.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'user.openshift.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'user.openshift.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      groups: [Root],
      group: [Root],
      identities: [Root],
      identitie: [Root],
      useridentitymappings: [Root],
      useridentitymapping: [Root],
      users: [Root],
      user: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/user.openshift.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/user.openshift.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  'authentication.k8s.io': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'authentication.k8s.io' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1', 'v1beta1' ],
    v1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      tokenreviews: [Root],
      tokenreview: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/authentication.k8s.io/v1/',
      get: [Function: _get],
      getStream: [Function]
    },
    v1beta1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      tokenreviews: [Root],
      tokenreview: [Root],
      pathItemObject: [Object],
      swaggerName: '/apis/authentication.k8s.io/v1beta1/',
      get: [Function: _get],
      getStream: [Function]
    },
    pathItemObject: { get: [Object] },
    swaggerName: '/apis/authentication.k8s.io/',
    get: [Function: _get],
    getStream: [Function]
  },
  pathItemObject: {
    get: {
      description: 'get available API versions',
      consumes: [Array],
      produces: [Array],
      schemes: [Array],
      tags: [Array],
      operationId: 'getAPIVersions',
      responses: [Object]
    }
  },
  swaggerName: '/apis/',
  get: [Function: _get],
  getStream: [Function],
  'mdc.aerogear.org': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'mdc.aerogear.org' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1alpha1' ],
    v1alpha1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      mobileclients: [Root],
      mobileclient: [Root]
    }
  },
  'push.aerogear.org': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'push.aerogear.org' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1alpha1' ],
    v1alpha1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      pushapplications: [Root],
      pushapplication: [Root],
      androidvariants: [Root],
      androidvariant: [Root],
      iosvariants: [Root],
      iosvariant: [Root]
    }
  },
  'mobile-security-service.aerogear.org': Root {
    templatedEndpoints: null,
    parameters: [],
    templated: false,
    splits: [ 'apis', 'mobile-security-service.aerogear.org' ],
    backend: Request { requestOptions: [Object], authProvider: [Object] },
    getNames: [Function],
    children: [ 'v1alpha1' ],
    v1alpha1: Root {
      templatedEndpoints: null,
      parameters: [],
      templated: false,
      splits: [Array],
      backend: [Request],
      getNames: [Function],
      children: [Array],
      watch: [Root],
      namespaces: [Root],
      ns: [Root],
      namespace: [Root],
      mobilesecurityserviceapps: [Root],
      mobilesecurityserviceapp: [Root]
    }
  }
}
